{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","className","href","TodoInfo","title","completed","user","classNames","TodoList","React","memo","todos","map","item","getUser","userId","usersFromServer","find","todo","App","useState","inputTitle","setInputTitle","selectedUserId","setUser","todoList","setTodos","isTitleError","setTitleErrorStatus","isUserError","setUserErrorStatus","action","method","type","placeholder","value","onChange","event","currValue","target","test","slice","disabled","onClick","preventDefault","trim","newTodo","Math","max","prevTodos","addTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be05594e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoInfo: React.FC<Todo> = ({\n  id, title, completed, user,\n}) => (\n  <article\n    className={classNames(\n      'TodoInfo', { 'TodoInfo--completed': completed === true },\n    )}\n    data-id={id}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n    {user ? (\n      <UserInfo\n        {...user}\n      />\n    ) : null}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(item => (\n      <TodoInfo\n        key={item.id}\n        {...item}\n      />\n    ))}\n  </section>\n));\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [selectedUserId, setUser] = useState('0');\n  const [todoList, setTodos] = useState(todos);\n  const [isTitleError, setTitleErrorStatus] = useState(false);\n  const [isUserError, setUserErrorStatus] = useState(false);\n  const addTodo = (event: React.FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (inputTitle.trim() === '') {\n      setTitleErrorStatus(true);\n\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n    const newTodo = {\n      id: newId,\n      title: inputTitle,\n      completed: false,\n      userId: +selectedUserId,\n      user: getUser(+selectedUserId),\n    };\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n    setInputTitle('');\n    setUser('0');\n  };\n\n  const handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const regex = /\\d|[a-z]|[а-я]|\\s/i;\n    const target = event.target as HTMLInputElement;\n    const currValue = target.value;\n\n    if (regex.test(currValue.slice(-1)) || currValue === '') {\n      setInputTitle(currValue);\n    }\n\n    setTitleErrorStatus(false);\n  };\n\n  const handleSelectChange = (event: React.FormEvent<HTMLSelectElement>) => {\n    const target = event.target as HTMLSelectElement;\n    const currValue = target.value;\n\n    setUser(currValue);\n    setUserErrorStatus(false);\n  };\n\n  const handleButtonChange = (event: React.FormEvent<HTMLButtonElement>) => {\n    if (inputTitle && +selectedUserId) {\n      return addTodo(event);\n    }\n\n    if (inputTitle) {\n      setTitleErrorStatus(false);\n    } else {\n      setTitleErrorStatus(true);\n    }\n\n    if (+selectedUserId) {\n      setUserErrorStatus(false);\n    } else {\n      setUserErrorStatus(true);\n    }\n\n    return event.preventDefault();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>{'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter the title\"\n              value={inputTitle}\n              onChange={handleInputChange}\n            />\n          </label>\n          {\n            isTitleError\n              ? <span className=\"error\">Please enter a title</span>\n              : ''\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>{'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSelectChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {\n            isUserError\n              ? <span className=\"error\">Please choose a user</span>\n              : ''\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleButtonChange}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todoList}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}